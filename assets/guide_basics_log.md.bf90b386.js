import{_ as s,c as n,o as a,d as l}from"./app.ce21e48a.js";const o="/gf-docs/assets/log-mind-map.47afa4ee.png",g=JSON.parse('{"title":"日志","description":"","frontmatter":{},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[{"level":3,"title":"组件特性","slug":"组件特性","link":"#组件特性","children":[]},{"level":3,"title":"知识图谱","slug":"知识图谱","link":"#知识图谱","children":[]},{"level":3,"title":"单例对象","slug":"单例对象","link":"#单例对象","children":[]},{"level":3,"title":"glog.Print和 g.Log().Print区别","slug":"glog-print和-g-log-print区别","link":"#glog-print和-g-log-print区别","children":[]}]},{"level":2,"title":"配置管理","slug":"配置管理","link":"#配置管理","children":[{"level":3,"title":"配置文件(推荐)","slug":"配置文件-推荐","link":"#配置文件-推荐","children":[]},{"level":3,"title":"配置方法(高级)","slug":"配置方法-高级","link":"#配置方法-高级","children":[]}]},{"level":2,"title":"日志级别","slug":"日志级别","link":"#日志级别","children":[{"level":3,"title":"SetLevel","slug":"setlevel","link":"#setlevel","children":[]},{"level":3,"title":"SetLevelStr","slug":"setlevelstr","link":"#setlevelstr","children":[]},{"level":3,"title":"级别名称","slug":"级别名称","link":"#级别名称","children":[]}]},{"level":2,"title":"文件目录","slug":"文件目录","link":"#文件目录","children":[{"level":3,"title":"日志文件","slug":"日志文件","link":"#日志文件","children":[]},{"level":3,"title":"日志目录","slug":"日志目录","link":"#日志目录","children":[]}]},{"level":2,"title":"链式操作","slug":"链式操作","link":"#链式操作","children":[{"level":3,"title":"示例1, 基本使用","slug":"示例1-基本使用","link":"#示例1-基本使用","children":[]},{"level":3,"title":"示例2, 打印调用行号","slug":"示例2-打印调用行号","link":"#示例2-打印调用行号","children":[]},{"level":3,"title":"示例3, 文件回溯 Skip","slug":"示例3-文件回溯-skip","link":"#示例3-文件回溯-skip","children":[]}]},{"level":2,"title":"颜色打印","slug":"颜色打印","link":"#颜色打印","children":[{"level":3,"title":"使用配置","slug":"使用配置","link":"#使用配置","children":[]},{"level":3,"title":"默认颜色对应表","slug":"默认颜色对应表","link":"#默认颜色对应表","children":[]}]},{"level":2,"title":"Context","slug":"context","link":"#context","children":[]},{"level":2,"title":"Handler","slug":"handler","link":"#handler","children":[{"level":3,"title":"相关定义","slug":"相关定义","link":"#相关定义","children":[]},{"level":3,"title":"使用示例","slug":"使用示例","link":"#使用示例","children":[]},{"level":3,"title":"全局默认 Handler","slug":"全局默认-handler","link":"#全局默认-handler","children":[]},{"level":3,"title":"组件通用 Handler","slug":"组件通用-handler","link":"#组件通用-handler","children":[]}]},{"level":2,"title":"JSON格式","slug":"json格式","link":"#json格式","children":[{"level":3,"title":"使用 map/struct参数","slug":"使用-map-struct参数","link":"#使用-map-struct参数","children":[]},{"level":3,"title":"结合 gjson.MustEncode","slug":"结合-gjson-mustencode","link":"#结合-gjson-mustencode","children":[]}]},{"level":2,"title":"异步输出","slug":"异步输出","link":"#异步输出","children":[]},{"level":2,"title":"堆栈打印","slug":"堆栈打印","link":"#堆栈打印","children":[]},{"level":2,"title":"调试信息","slug":"调试信息","link":"#调试信息","children":[]},{"level":2,"title":"Writer接口","slug":"writer接口","link":"#writer接口","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}],"relativePath":"guide/basics/log.md","lastUpdated":1675240931000}'),p={name:"guide/basics/log.md"},e=l(`<h1 id="日志" tabindex="-1">日志 <a class="header-anchor" href="#日志" aria-hidden="true">#</a></h1><p><code>glog</code>是通用的高性能日志管理模块，实现了强大易用的日志管理功能，是 <code>GoFrame</code>开发框架的核心组件之一。</p><h2 id="基本介绍" tabindex="-1">基本介绍 <a class="header-anchor" href="#基本介绍" aria-hidden="true">#</a></h2><p><strong>使用方式:</strong></p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p><strong>接口文档</strong> ：<a href="https://pkg.go.dev/github.com/gogf/gf/v2/os/glog" target="_blank" rel="noreferrer">https://pkg.go.dev/github.com/gogf/gf/v2/os/glog</a></p><p><strong>简要说明：</strong></p><ol><li><code>glog</code>模块固定日志文件名称格式为 <code>*.log</code>，即固定使用 <code>.log</code>作为日志文件名后缀。</li><li><code>glog</code>支持文件输出、日志级别、日志分类、调试管理、调用跟踪、链式操作、滚动切分等等丰富特性。</li><li>可以使用 <code>glog.New</code>方法创建 <code>glog.Logger</code>对象用于自定义日志打印，也可以并推荐使用 <code>glog</code>默认提供的包方法来打印日志。</li><li>当使用包方法修改模块配置时，注意任何的 <code>glog.Set*</code>设置方法都将会 <strong>全局生效</strong> 。</li><li>日志内容默认时间格式为 <code>时间 [级别] 内容 换行</code>，其中 <code>时间</code>精确到毫秒级别，<code>级别</code>为可选输出，<code>内容</code>为调用端的参数输入，<code>换行</code>为可选输出(部分方法自动为日志内容添加换行符号)，日志内容示例：<code>2018-10-10 12:00:01.568 [ERRO] 产生错误</code>。</li><li><code>Print*/Debug*/Info*</code>方法输出日志内容到标准输出(<code>stdout</code>)，为防止日志的错乱，<code>Notice*/Warning*/Error*/Critical*/Panic*/Fatal*</code>方法也是将日志内容输出到标准输出(<code>stdout</code>)。</li><li><code>Panic*</code>方法在输出日志信息后会引发 <code>panic</code>错误方法</li><li><code>Fatal*</code>方法在输出日志信息之后会停止进程运行，并返回进程状态码值为 <code>1</code>(正常程序退出状态码为 <code>0</code>)。</li></ol><h3 id="组件特性" tabindex="-1">组件特性 <a class="header-anchor" href="#组件特性" aria-hidden="true">#</a></h3><p><code>glog</code>组件具有以下显著特性：</p><ul><li>使用简便，功能强大</li><li>支持配置管理，使用统一的配置组件</li><li>支持日志级别</li><li>支持颜色打印</li><li>支持链式操作</li><li>支持指定输出日志文件/目录</li><li>支持链路跟踪</li><li>支持异步输出</li><li>支持堆栈打印</li><li>支持调试信息开关</li><li>支持自定义 <code>Writer</code>输出接口</li><li>支持自定义日志 <code>Handler</code>处理</li><li>支持自定义日志 <code>CtxKeys</code>键值</li><li>支持 <code>JSON</code>格式打印</li><li>支持 <code>Flags</code>特性</li><li>支持 <code>Rotate</code>滚动切分特性</li></ul><h3 id="知识图谱" tabindex="-1">知识图谱 <a class="header-anchor" href="#知识图谱" aria-hidden="true">#</a></h3><p><img src="`+o+`" alt=""></p><h3 id="单例对象" tabindex="-1">单例对象 <a class="header-anchor" href="#单例对象" aria-hidden="true">#</a></h3><p>日志组件支持单例模式，使用 <code>g.Log(单例名称)</code>获取不同的单例日志管理对象。提供单例对象的目的在于针对不同业务场景可以使用不同配置的日志管理对象。我们推荐使用 <code>g.Log()</code>方法获取单例对象来进行日志操作，该方法内部会自动读取配置文件并初始化单例对象，该初始化操作仅会执行一次。</p><h3 id="glog-print和-g-log-print区别" tabindex="-1"><code>glog.Print</code>和 <code>g.Log().Print</code>区别 <a class="header-anchor" href="#glog-print和-g-log-print区别" aria-hidden="true">#</a></h3><ul><li><code>glog</code>是日志组件的包名，<code>g.Log()</code>是一个日志组件单例对象。</li><li><code>g.Log()</code>单例对象通过对象管理组件 <code>g</code>包来维护，对象初始化时会自动读取日志配置，使用简便，大多数场景下推荐使用这种方式使用日志组件。</li><li><code>glog</code>通过独立组件的形式使用，默认情况下会直接输出日志到终端。也可以通过配置管理方法设置全局配置，或者通过 <code>New</code>创建独立的日志对象使用</li></ul><h2 id="配置管理" tabindex="-1">配置管理 <a class="header-anchor" href="#配置管理" aria-hidden="true">#</a></h2><h3 id="配置文件-推荐" tabindex="-1">配置文件(推荐) <a class="header-anchor" href="#配置文件-推荐" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>日志的配置使用的是框架统一的配置组件，支持多种文件格式，也支持配置中心、接口化扩展等特性，更多细节请参考章节：<a href="./configure.html">配置管理</a></p></div><p>日志组件支持配置文件，当使用 <code>g.Log(单例名称)</code>获取 <code>Logger</code>单例对象时，将会自动通过默认的配置管理对象获取对应的 <code>Logger</code>配置。默认情况下会读取 <code>logger.单例名称</code>配置项，当该配置项不存在时，将会读取默认的 <code>logger</code>配置项。配置项请参考配置对象结构定义：<a href="https://pkg.go.dev/github.com/gogf/gf/v2/os/glog#Config" target="_blank" rel="noreferrer">https://pkg.go.dev/github.com/gogf/gf/v2/os/glog#Config</a></p><p>完整配置文件配置项及说明如下，其中配置项名称不区分大小写：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">logger</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/log/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># 日志文件路径。默认为空，表示关闭，仅输出到终端</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{Y-m-d}.log</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 日志文件格式。默认为&quot;{Y-m-d}.log&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 日志内容输出前缀。默认为空</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 日志输出级别</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">ctxKeys</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;"># 自定义Context上下文变量名称，自动打印Context的变量到日志中。默认为空</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">                </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 是否打印日志的头信息。默认true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stdout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">                </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 日志是否同时输出到终端。默认true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rotateSize</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 按照日志文件大小对文件进行滚动切分。默认为0，表示关闭滚动切分特性</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rotateExpire</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">          </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 按照日志文件时间间隔对文件滚动切分。默认为0，表示关闭滚动切分特性</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rotateBackupLimit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 按照切分的文件数量清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，切分则删除</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rotateBackupExpire</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 按照切分的文件有效期清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，切分则删除</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rotateBackupCompress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;"># 滚动切分文件的压缩比（0-9）。默认为0，表示不压缩</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rotateCheckInterval</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 滚动切分的时间检测间隔，一般不需要设置。默认为1小时</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stdoutColorDisabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 关闭终端的颜色打印。默认开启</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">writerColorEnable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 日志文件是否带上颜色。默认false，表示不带颜色</span></span>
<span class="line"></span></code></pre></div><p>其中，<code>level</code>配置项使用字符串配置，按照日志级别支持以下配置：<code>DEBU</code> &lt; <code>INFO</code> &lt; <code>NOTI</code> &lt; <code>WARN</code> &lt; <code>ERRO</code> &lt; <code>CRIT</code>，也支持 <code>ALL</code>, <code>DEV</code>, <code>PROD</code>常见部署模式配置名称。<code>level</code>配置项字符串不区分大小写。关于日志级别的详细介绍请查看 <a href="#%E6%97%A5%E5%BF%97%E7%BA%A7%E5%88%AB">日志-日志级别</a> 章节。</p><h4 id="示例1-默认配置项" tabindex="-1">示例1，默认配置项 <a class="header-anchor" href="#示例1-默认配置项" aria-hidden="true">#</a></h4><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">logger</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/log</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stdout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span></code></pre></div><p>随后可以使用 <code>g.Log()</code>获取默认的单例对象时自动获取并设置该配置。</p><h4 id="示例2-多个配置项" tabindex="-1">示例2，多个配置项 <a class="header-anchor" href="#示例2-多个配置项" aria-hidden="true">#</a></h4><p>多个 <code>Logger</code>的配置示例：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">logger</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/log</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stdout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">logger1</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/log/logger1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">stdout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">logger2</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/log/logger2</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prod</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">stdout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span></code></pre></div><p>我们可以通过单例对象名称获取对应配置的 <code>Logger</code>单例对象：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 对应 logger.logger1 配置项</span></span>
<span class="line"><span style="color:#A6ACCD;">l1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logger1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 对应 logger.logger2 配置项</span></span>
<span class="line"><span style="color:#A6ACCD;">l2 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">logger2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 对应默认配置项 logger</span></span>
<span class="line"><span style="color:#A6ACCD;">l3 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">none</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 对应默认配置项 logger</span></span>
<span class="line"><span style="color:#A6ACCD;">l4 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><h3 id="配置方法-高级" tabindex="-1">配置方法(高级) <a class="header-anchor" href="#配置方法-高级" aria-hidden="true">#</a></h3><p>配置方法用于模块化使用 <code>glog</code>时由开发者自己进行配置管理。</p><p>方法列表：</p><p>简要说明：</p><ol><li>可以通过 <code>SetConfig</code>及 <code>SetConfigWithMap</code>来设置。</li><li>也可以使用 <code>Logger</code>对象的 <code>Set*</code>方法进行特定配置的设置。</li><li>主要注意的是，配置项在 <code>Logger</code>对象执行日志输出之前设置，避免并发安全问题。</li></ol><p>我们可以使用 <code>SetConfigWithMap</code>方法通过 <code>Key-Value</code>键值对来设置/修改 <code>Logger</code>的特定配置，其余的配置使用默认配置即可。其中 <code>Key</code>的名称即是 <code>Config</code>这个 <code>struct</code>中的属性名称，并且不区分大小写，单词间也支持使用 <code>-</code>/<code>_</code>/<code>空格</code>符号连接，具体可参考 <a href="./../core/type-transform.html">类型转换-Struct转换</a> 章节的转换规则。</p><p>简单示例：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">logger := glog.New()</span></span>
<span class="line"><span style="color:#A6ACCD;">logger.SetConfigWithMap(g.Map{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;path&quot;:     &quot;/var/log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;level&quot;:    &quot;all&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;stdout&quot;:   false,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;StStatus&quot;: 0,</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">logger.Print(&quot;test&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>其中 <code>StStatus</code>表示是否开启堆栈打印，设置为 <code>0</code>表示关闭。键名也可以使用 <code>stStatus</code>, <code>st-status</code>, <code>st_status</code>, <code>St Status</code>，其他配置属性以此类推</p><h2 id="日志级别" tabindex="-1">日志级别 <a class="header-anchor" href="#日志级别" aria-hidden="true">#</a></h2><p>日志级别用于管理日志的输出，我们可以通过设定特定的日志级别来关闭/开启特定的日志内容。 日志级别的设置可以通过两个方法实现：</p><h3 id="setlevel" tabindex="-1">SetLevel <a class="header-anchor" href="#setlevel" aria-hidden="true">#</a></h3><p>通过 <code>SetLevel</code>方法可以设置日志级别，<code>glog</code>模块支持以下几种日志级别常量设定：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">LEVEL_ALL</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_DEV</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_PROD</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_DEBU</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_INFO</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_NOTI</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_WARN</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_ERRO</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>我们可以通过 <code>位操作</code>组合使用这几种级别，例如其中 <code>LEVEL_ALL</code>等价于 <code>LEVEL_DEBU | LEVEL_INFO | LEVEL_NOTI | LEVEL_WARN | LEVEL_ERRO | LEVEL_CRIT</code>。我们还可以通过 <code>LEVEL_ALL &amp; ^LEVEL_DEBU &amp; ^LEVEL_INFO &amp; ^LEVEL_NOTI</code>来过滤掉 <code>LEVEL_DEBU/LEVEL_INFO/LEVEL_NOTI</code>日志内容。</p><p>::: waring</p><p>当然 <code>glog</code>模块还有其他的一些级别，如 <code>CRIT</code>和 <code>FATA</code>，但是这两个级别是非常严重的错误，无法由开发者自定义屏蔽，产生严重错误的时候。将会产生一些额外的系统动作，如 <code>panic</code>/<code>exit</code>。</p><p>:::</p><p>使用示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	l </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetLevel</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LEVEL_ALL </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LEVEL_INFO</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，输出结果为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2021-12-31 11:16:57.272 [INFO] info1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="setlevelstr" tabindex="-1"><code>SetLevelStr</code> <a class="header-anchor" href="#setlevelstr" aria-hidden="true">#</a></h3><p>大部分场景下我们可以通过 <code>SetLevelStr</code>方法来通过字符串设置日志级别，配置文件中的 <code>level</code>配置项也是通过字符串来配置日志级别。支持的日志级别字符串如下，不区分大小写：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ALL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">      LEVEL_DEBU </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_INFO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEV</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">      LEVEL_DEBU </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_INFO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEVELOP</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  LEVEL_DEBU </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_INFO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PROD</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PRODUCT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBU</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_DEBU </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_INFO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBUG</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    LEVEL_DEBU </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_INFO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">INFO</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_INFO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NOTI</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NOTICE</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   LEVEL_NOTI </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WARN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WARNING</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  LEVEL_WARN </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ERRO</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ERROR</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    LEVEL_ERRO </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CRIT</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CRITICAL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> LEVEL_CRIT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span></code></pre></div><p>可以看到，通过级别名称设置的日志级别是按照日志级别的高低来进行过滤的：<code>DEBU &lt; INFO &lt; NOTI &lt; WARN &lt; ERRO &lt; CRIT</code>，也支持 <code>ALL</code>, <code>DEV</code>, <code>PROD</code>常见部署模式配置名称。</p><p>使用示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	l </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetLevelStr</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">notice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">info2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，输出结果为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2021-12-31 11:20:15.019 [INFO] info1 </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="级别名称" tabindex="-1">级别名称 <a class="header-anchor" href="#级别名称" aria-hidden="true">#</a></h3><p>在日志中我们会看到不同级别的打印内容，会在内容前面带有不同的日志级别名称。默认的日志级别名称如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">LEVEL_DEBU: &quot;DEBU&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_INFO: &quot;INFO&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_NOTI: &quot;NOTI&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_WARN: &quot;WARN&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_ERRO: &quot;ERRO&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_CRIT: &quot;CRIT&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_PANI: &quot;PANI&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">LEVEL_FATA: &quot;FATA&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>为方便统一日志格式，保证比较优雅的排版风格，因此日志级别的名称都使用了级别英文单词的前四个字符。若有特殊需求需要修改日志级别名称的，可以通过以下方法进行设置：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SetLevelPrefix</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">level </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> prefix </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SetLevelPrefixes</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prefixes </span><span style="color:#89DDFF;">map[</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>使用示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	l </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetLevelPrefix</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LEVEL_DEBU</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	l</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2021</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">31</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">45.754</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">debug</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> test </span></span>
<span class="line"></span></code></pre></div><h2 id="文件目录" tabindex="-1">文件目录 <a class="header-anchor" href="#文件目录" aria-hidden="true">#</a></h2><h3 id="日志文件" tabindex="-1">日志文件 <a class="header-anchor" href="#日志文件" aria-hidden="true">#</a></h3><p>默认情况下，日志文件名称以当前时间日期命名，格式为 <code>YYYY-MM-DD.log</code>，我们可以使用 <code>SetFile</code>方法来设置文件名称的格式，并且文件名称格式支持 <a href="https://goframe.org/pages/viewpage.action?pageId=1114883" target="_blank" rel="noreferrer">时间管理-gtime</a> 时间格式 。简单示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/gfile</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置日志等级</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	path </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetStdoutPrint</span><span style="color:#89DDFF;">(false)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 使用默认文件名称格式</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">标准文件名称格式，使用当前时间时期</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 通过SetFile设置文件名称格式</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetFile</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stdout.log</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">设置日志输出文件名称格式为同一个文件</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 链式操作设置文件名称格式</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">File</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stderr.log</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">支持链式操作</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">File</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error-{Ymd}.log</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">文件名称支持带gtime日期格式</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">File</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">access-{Ymd}.log</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">文件名称支持带gtime日期格式</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	list</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> gfile</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ScanDir</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，输出结果为：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">nil</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;C:\\hailaz\\test\\glog\\2021-12-31.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;C:\\hailaz\\test\\glog\\access-20211231.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;C:\\hailaz\\test\\glog\\error-20211231.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;C:\\hailaz\\test\\glog\\stderr.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;C:\\hailaz\\test\\glog\\stdout.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre></div><p>可以看到，文件名称格式中如果需要使用 <code>gtime</code>时间格式，格式内容需要使用 <code>{xxx}</code>包含起来。该示例中也使用到了 <code>链式操作</code>的特性，具体请看后续说明。</p><h3 id="日志目录" tabindex="-1">日志目录 <a class="header-anchor" href="#日志目录" aria-hidden="true">#</a></h3><p>默认情况下，<code>glog</code>将会输出日志内容到标准输出，我们可以通过 <code>SetPath</code>方法设置日志输出的目录路径，这样日志内容将会写入到日志文件中，并且由于其内部使用了 <code>gfpool</code>文件指针池，文件写入的效率相当优秀。简单示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/gfile</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置日志等级</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	path </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">日志内容</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	list</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> gfile</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ScanDir</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，输出内容为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2021-12-31 11:32:16.742 日志内容 </span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;nil&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;C:\\hailaz\\test\\glog\\2021-12-31.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>当通过 <code>SetPath</code>设置日志的输出目录，如果目录不存在时，将会递归创建该目录路径。可以看到，执行 <code>Println</code>之后，在 <code>/tmp</code>下创建了日志目录 <code>glog</code>，并且在其下生成了日志文件。同时，我们也可以看见日志内容不仅输出到了文件，默认情况下也输出到了终端，我们可以通过 <code>SetStdoutPrint(false)</code>方法来关闭终端的日志输出，这样日志内容仅会输出到日志文件中。</p><h2 id="链式操作" tabindex="-1">链式操作 <a class="header-anchor" href="#链式操作" aria-hidden="true">#</a></h2><p>完整的方法列表可参考接口文档：<a href="https://pkg.go.dev/github.com/gogf/gf/v2/os/glog" target="_blank" rel="noreferrer">https://pkg.go.dev/github.com/gogf/gf/v2/os/glog</a></p><p><code>glog</code>模块支持非常简便的 <code>链式操作</code>方式，主要的链式操作方法如下：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 重定向日志输出接口</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">To</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">writer io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Writer</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 日志内容输出到目录</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Path</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置日志文件分类</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Cat</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">category </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置日志文件格式</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">File</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">file </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置日志打印级别</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Level</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">level </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置日志打印级别(字符串)</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LevelStr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">levelStr </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 设置文件回溯值</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Skip</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">skip </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 是否开启trace打印</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Stack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">enabled </span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 开启trace打印并设定过滤trace的字符串</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">StackWithFilter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">filter </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 是否开启终端输出</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Stdout</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">enabled</span><span style="color:#89DDFF;">...</span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 是否输出日志头信息</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Header</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">enabled</span><span style="color:#89DDFF;">...</span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出日志调用行号信息</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Line</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">long</span><span style="color:#89DDFF;">...</span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 异步输出日志</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Async</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">enabled</span><span style="color:#89DDFF;">...</span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logge</span></span>
<span class="line"></span></code></pre></div><h3 id="示例1-基本使用" tabindex="-1">示例1, 基本使用 <a class="header-anchor" href="#示例1-基本使用" aria-hidden="true">#</a></h3><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/gfile</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	path </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/glog-cat</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">SetPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Stdout</span><span style="color:#89DDFF;">(false).</span><span style="color:#82AAFF;">Cat</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cat1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Cat</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cat2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	list</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> gfile</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ScanDir</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dump</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，输出结果为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">	&quot;/tmp/glog-cat/cat1&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">	&quot;/tmp/glog-cat/cat1/cat2&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">	&quot;/tmp/glog-cat/cat1/cat2/2018-10-10.log&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="示例2-打印调用行号" tabindex="-1">示例2, 打印调用行号 <a class="header-anchor" href="#示例2-打印调用行号" aria-hidden="true">#</a></h3><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Line</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this is the short file name with its line number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Line</span><span style="color:#89DDFF;">(true).</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lone file name with line number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出结果为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2019-05-23 09:22:58.141 glog_line.go:8: this is the short file name with its line number</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-05-23 09:22:58.142 /Users/john/Workspace/Go/GOPATH/src/github.com/gogf/gf/.example/os/glog/glog_line.go:9: lone file name with line number</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="示例3-文件回溯-skip" tabindex="-1">示例3, 文件回溯 <code>Skip</code> <a class="header-anchor" href="#示例3-文件回溯-skip" aria-hidden="true">#</a></h3><p>有时我们通过一些模块封装了 <code>glog</code>模块来打印日志，例如封装了一个 <code>logger</code>包通过 <code>logger.Print</code>来打印日志，这个时候打印出来的调用文件行号总是同一个位置，因为对于 <code>glog</code>来讲，它的调用方即总是 <code>logger.Print</code>方法。这个时候，我们可以通过设置回溯值来跳过回溯的文件数，使用 <code>SetStackSkip</code>或者链式方法 <code>Skip</code>实现。</p><blockquote><p>文件回溯值的设置同样也会影响 <code>Stack</code>调用回溯打印结果。</p></blockquote><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PrintLog</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> content </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Skip</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Line</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">line number with skip:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> content</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Line</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">line number without skip:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> content</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">PrintLog</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">just test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出结果为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2019-05-23 19:30:10.984 glog_line2.go:13: line number with skip: just test</span></span>
<span class="line"><span style="color:#A6ACCD;">2019-05-23 19:30:10.984 glog_line2.go:9: line number without skip: just test</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="颜色打印" tabindex="-1">颜色打印 <a class="header-anchor" href="#颜色打印" aria-hidden="true">#</a></h2><p>可以增加日志的可查看性，打印日志时，会将错误等级文字通过添加字体颜色的方式突出显示。</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Notice</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Notice</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Warning</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Warning</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="https://goframe.org/download/attachments/20086799/image2021-12-31_10-51-10.png?version=1&amp;modificationDate=1640919070315&amp;api=v2" alt=""></p><h3 id="使用配置" tabindex="-1">使用配置 <a class="header-anchor" href="#使用配置" aria-hidden="true">#</a></h3><p>控制台是必然会自带颜色输出的，文件日志默认不带颜色</p><p>若需要在文件中的日志也带上颜色可以在配置文件中添加配置</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">logger</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stdoutColorDisabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 是否关闭终端的颜色打印。默认否，表示终端的颜色输出。</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">writerColorEnable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 是否开启Writer的颜色打印。默认否，表示不输出颜色到自定义的Writer或者文件。</span></span>
<span class="line"></span></code></pre></div><p>也可以在代码中添加</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">SetWriterColorEnable</span><span style="color:#89DDFF;">(true)</span></span>
<span class="line"></span></code></pre></div><h3 id="默认颜色对应表" tabindex="-1">默认颜色对应表 <a class="header-anchor" href="#默认颜色对应表" aria-hidden="true">#</a></h3><p>默认情况下，不同日志等级对应的颜色如下：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// \\v2\\os\\glog\\glog_logger_color.go</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> defaultLevelColor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">map[</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_DEBU</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_YELLOW</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_INFO</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_GREEN</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_NOTI</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_CYAN</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_WARN</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_MAGENTA</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_ERRO</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_RED</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_CRIT</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_HI_RED</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_PANI</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_HI_RED</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LEVEL_FATA</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> COLOR_HI_RED</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-hidden="true">#</a></h2><h2 id="handler" tabindex="-1">Handler <a class="header-anchor" href="#handler" aria-hidden="true">#</a></h2><p>从 <code>v2.0</code>版本开始，<code>glog</code>组件提供了超级强大的、可自定义日志处理的 <code>Handler</code>特性。<code>Handler</code>采用了中间件设计方式，开发者可以为日志对象注册多个处理 <code>Handler</code>，也可以在 <code>Handler</code>中覆盖默认的日志组件处理逻辑。</p><h3 id="相关定义" tabindex="-1">相关定义 <a class="header-anchor" href="#相关定义" aria-hidden="true">#</a></h3><h4 id="handler方法定义" tabindex="-1"><code>Handler</code>方法定义 <a class="header-anchor" href="#handler方法定义" aria-hidden="true">#</a></h4><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Handler is function handler for custom logging content outputs.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Handler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">ctx context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">HandlerInput</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>可以看到第二个参数为日志处理的日志信息，并且为指针类型，意味着在 <code>Handler</code>中可以修改该参数的任意属性信息，并且修改后的内容将会传递给下一个 <code>Handler</code>。</p><h4 id="handler参数定义" tabindex="-1"><code>Handler</code>参数定义 <a class="header-anchor" href="#handler参数定义" aria-hidden="true">#</a></h4><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// HandlerInput is the input parameter struct for logging Handler.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HandlerInput</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Logger       </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger         </span><span style="color:#676E95;font-style:italic;">// Logger.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Ctx          context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context </span><span style="color:#676E95;font-style:italic;">// Context.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Buffer       </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">bytes</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer   </span><span style="color:#676E95;font-style:italic;">// Buffer for logging content outputs.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Time         time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time       </span><span style="color:#676E95;font-style:italic;">// Logging time, which is the time that logging triggers.</span></span>
<span class="line"><span style="color:#A6ACCD;">	TimeFormat   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// Formatted time string, like &quot;2016-01-09 12:00:00&quot;.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Color        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;">// Using color, like COLOR_RED, COLOR_BLUE, etc.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Level        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;">// Using level, like LEVEL_INFO, LEVEL_ERRO, etc.</span></span>
<span class="line"><span style="color:#A6ACCD;">	LevelFormat  </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// Formatted level string, like &quot;DEBU&quot;, &quot;ERRO&quot;, etc.</span></span>
<span class="line"><span style="color:#A6ACCD;">	CallerFunc   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// The source function name that calls logging.</span></span>
<span class="line"><span style="color:#A6ACCD;">	CallerPath   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// The source file path and its line number that calls logging.</span></span>
<span class="line"><span style="color:#A6ACCD;">	CtxStr       </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// The retrieved context value string from context.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Prefix       </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// Custom prefix string for logging content.</span></span>
<span class="line"><span style="color:#A6ACCD;">	Content      </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;">// Content is the main logging content that passed by you.</span></span>
<span class="line"><span style="color:#A6ACCD;">	IsAsync      </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">// IsAsync marks it is in asynchronous logging.</span></span>
<span class="line"><span style="color:#A6ACCD;">	handlerIndex </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">             </span><span style="color:#676E95;font-style:italic;">// Middleware handling index for internal usage.</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>开发者有两种方式修改默认的日志输出内容：</p><ul><li>一种是直接修改 <code>HandlerInput</code>中的属性信息，然后继续执行 <code>in.Next()</code></li><li>另一种自定义日志输出内容，将日志内容写入到 <code>Buffer</code>中即可。</li></ul><h4 id="handler注册到-logger方法" tabindex="-1"><code>Handler</code>注册到 <code>Logger</code>方法 <a class="header-anchor" href="#handler注册到-logger方法" aria-hidden="true">#</a></h4><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// SetHandlers sets the logging handlers for current logger.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Logger</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SetHandlers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">handlers </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">Handler</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-hidden="true">#</a></h3><p>我们来看两个示例便于更快速了解 <code>Handler</code>的使用。</p><h4 id="示例1-将日志输出转换为-json格式输出" tabindex="-1">示例1. 将日志输出转换为 <code>Json</code>格式输出 <a class="header-anchor" href="#示例1-将日志输出转换为-json格式输出" aria-hidden="true">#</a></h4><p>在本示例中，我们采用了前置中间件的设计，通过自定义 <code>Handler</code>将日志内容输出格式修改为了 <code>JSON</code>格式。</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">encoding/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">os</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/text/gstr</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JsonOutputsForLogger is for JSON marshaling in sequence.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">JsonOutputsForLogger</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Time    </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;time&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Level   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;level&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Content </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;content&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// LoggingJsonHandler is a example handler for logging JSON format content.</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> LoggingJsonHandler glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Handler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">ctx context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HandlerInput</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	jsonForLogger </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> JsonOutputsForLogger</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TimeFormat</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		Level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   gstr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Trim</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LevelFormat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		Content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> gstr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Trim</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	jsonBytes</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Marshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">jsonForLogger</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Stderr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">jsonBytes</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">SetHandlers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LoggingJsonHandler</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Warning</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>可以看到，我们可以在 <code>Handler</code>中通过 <code>Buffer</code>属性操作来控制输出的日志内容。如果在所有的前置中间件 <code>Handler</code>处理后 <code>Buffer</code>内容为空，那么继续 <code>Next</code>执行后将会执行日志中间件默认的 <code>Handler</code>逻辑。执行本示例的代码后，终端输出：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021-12-31 11:03:25.438</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBU</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021-12-31 11:03:25.438</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WARN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021-12-31 11:03:25.438</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ERRO</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check </span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">Stack:</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">1.  main.main</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">    C:/hailaz/test/main.go:42</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="示例2-将内容输出到第三方日志搜集服务中" tabindex="-1">示例2. 将内容输出到第三方日志搜集服务中 <a class="header-anchor" href="#示例2-将内容输出到第三方日志搜集服务中" aria-hidden="true">#</a></h4><p>在本示例中，我们采用了后置中间件的设计，通过自定义 <code>Handler</code>将日志内容输出一份到第三方 <code>graylog</code>日志搜集服务中，并且不影响原有的日志输出处理。</p><blockquote><p><code>Graylog</code> 是与 <code>ELK</code> 可以相提并论的一款集中式日志管理方案，支持数据收集、检索、可视化 <code>Dashboard</code>。在本示例中使用到了一个简单的第三方 <code>graylog</code>客户端组件。</p></blockquote><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	gelf </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/robertkowalski/graylog-golang</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> grayLogClient </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gelf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gelf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Config</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	GraylogPort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	GraylogHostname</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">graylog-host.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	Connection</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	MaxChunkSizeWan</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">42</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	MaxChunkSizeLan</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1337</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// LoggingGrayLogHandler is an example handler for logging content to remote GrayLog service.</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> LoggingGrayLogHandler glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Handler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">ctx context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HandlerInput</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	grayLogClient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">String</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">SetHandlers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LoggingGrayLogHandler</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Warning</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test log</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="全局默认-handler" tabindex="-1">全局默认 <code>Handler</code> <a class="header-anchor" href="#全局默认-handler" aria-hidden="true">#</a></h3><p>日志对象默认是没有设置任何的 <code>Handler</code>，从 <code>v2.1</code>版本开始，框架提供了可以设置全局默认 <code>Handler</code>的功能特性。全局默认 <code>Handler</code>将对所有的使用该日志组件，并且没有自定义 <code>Handler</code>的日志打印功能生效。同时，全局默认 <code>Handler</code>将会影响日志包方法的日志打印行为。</p><p>开发者可以通过以下两个方法来设置和获取全局默认的 <code>Handler</code>。</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// SetDefaultHandler sets default handler for package.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SetDefaultHandler</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">handler Handler</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GetDefaultHandler returns the default handler of package.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetDefaultHandler</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> Handler</span></span>
<span class="line"></span></code></pre></div><p>需要注意，这种全局包配置的方法不是并发安全的，并且往往需要在项目启动逻辑最顶部执行。</p><p>使用示例，我们将项目所有的日志输出均采用 <code>JSON</code>格式输出，以保证日志内容结构化并且每次日志输出都是单行，方便日志采集期采集日志：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">encoding/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">os</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/text/gstr</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JsonOutputsForLogger is for JSON marshaling in sequence.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">JsonOutputsForLogger</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Time    </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;time&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Level   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;level&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Content </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;content&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// LoggingJsonHandler is a example handler for logging JSON format content.</span></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> LoggingJsonHandler glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Handler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">ctx context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HandlerInput</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	jsonForLogger </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> JsonOutputsForLogger</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Time</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TimeFormat</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		Level</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   gstr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Trim</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LevelFormat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		Content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> gstr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Trim</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	jsonBytes</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Marshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">jsonForLogger</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Stderr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">jsonBytes</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Buffer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	in</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Next</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetDefaultHandler</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LoggingJsonHandler</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Warning</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-06-20 10:51:50.235</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBU</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-06-20 10:51:50.235</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WARN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-06-20 10:51:50.235</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ERRO</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="组件通用-handler" tabindex="-1">组件通用 <code>Handler</code> <a class="header-anchor" href="#组件通用-handler" aria-hidden="true">#</a></h3><p>组件提供了一些常用的日志 <code>Handler</code>，方便开发者使用，提高开发效率。</p><h4 id="handlerjson" tabindex="-1"><code>HandlerJson</code> <a class="header-anchor" href="#handlerjson" aria-hidden="true">#</a></h4><p>该 <code>Handler</code>可以将日志内容转换为 <code>Json</code>格式打印。使用示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/os/glog</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetDefaultHandler</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">glog</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HandlerJson</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Warning</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	glog</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-06-20 20:04:04.725</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DEBU</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Debugging...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-06-20 20:04:04.725</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WARN</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is warning info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Time</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-06-20 20:04:04.725</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Level</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ERRO</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error occurs, please have a check</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Stack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.  main.main\\n    /Users/john/Workspace/Go/GOPATH/src/github.com/gogf/gf/.test/main.go:16\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="json格式" tabindex="-1">JSON格式 <a class="header-anchor" href="#json格式" aria-hidden="true">#</a></h2><h3 id="使用-map-struct参数" tabindex="-1">使用 <code>map/struct</code>参数 <a class="header-anchor" href="#使用-map-struct参数" aria-hidden="true">#</a></h3><p>想要支持 <code>JSON</code>数据格式的日志输出非常简单，给打印方法提供 <code>map</code>/<code>struct</code>类型参数即可。</p><p>使用示例：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> g</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Map</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">john</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Uid  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;uid&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">		Name </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;name&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debug</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> User</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">john</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出结果：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">06</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">02</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52.653</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">DEBU</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">john</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">2019</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">06</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">02</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">52.653</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">DEBU</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">john</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="结合-gjson-mustencode" tabindex="-1">结合 <code>gjson.MustEncode</code> <a class="header-anchor" href="#结合-gjson-mustencode" aria-hidden="true">#</a></h3><p>此外，也可以结合 <code>gjson.MustEncode来</code>实现 <code>Json</code>内容输出，例如：</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/encoding/gjson</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/gogf/gf/v2/frame/g</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ctx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TODO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Uid  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;uid&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">		Name </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;name&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Debugf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">user json: %s</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> gjson</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MustEncode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">john</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}))</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>执行后，终端输出结果：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2022</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">04</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">25</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">09</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">45.029</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">DEBU</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> user json: </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">john</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="异步输出" tabindex="-1">异步输出 <a class="header-anchor" href="#异步输出" aria-hidden="true">#</a></h2><h2 id="堆栈打印" tabindex="-1">堆栈打印 <a class="header-anchor" href="#堆栈打印" aria-hidden="true">#</a></h2><h2 id="调试信息" tabindex="-1">调试信息 <a class="header-anchor" href="#调试信息" aria-hidden="true">#</a></h2><h2 id="writer接口" tabindex="-1">Writer接口 <a class="header-anchor" href="#writer接口" aria-hidden="true">#</a></h2><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-hidden="true">#</a></h2>`,172),t=[e];function c(r,D,F,y,C,A){return a(),n("div",null,t)}const d=s(p,[["render",c]]);export{g as __pageData,d as default};
