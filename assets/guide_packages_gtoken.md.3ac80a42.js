import{_ as s,c as a,o as n,d as l}from"./app.ce21e48a.js";const C=JSON.parse('{"title":"Gtoken","description":"","frontmatter":{},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[{"level":3,"title":"gtoken优势","slug":"gtoken优势","link":"#gtoken优势","children":[]},{"level":3,"title":"特性说明","slug":"特性说明","link":"#特性说明","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"分组中间件实现","slug":"分组中间件实现","link":"#分组中间件实现","children":[{"level":3,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[]},{"level":3,"title":"路径拦截规则","slug":"路径拦截规则","link":"#路径拦截规则","children":[]},{"level":3,"title":"逻辑测试","slug":"逻辑测试","link":"#逻辑测试","children":[]}]},{"level":2,"title":"全局中间件实现","slug":"全局中间件实现","link":"#全局中间件实现","children":[{"level":3,"title":"使用说明","slug":"使用说明-1","link":"#使用说明-1","children":[]},{"level":3,"title":"路径拦截规则","slug":"路径拦截规则-1","link":"#路径拦截规则-1","children":[]},{"level":3,"title":"逻辑测试","slug":"逻辑测试-1","link":"#逻辑测试-1","children":[]},{"level":3,"title":"返回码及配置项","slug":"返回码及配置项","link":"#返回码及配置项","children":[]}]},{"level":2,"title":"配置说明","slug":"配置说明","link":"#配置说明","children":[]}],"relativePath":"guide/packages/gtoken.md","lastUpdated":1675081585000}'),o={name:"guide/packages/gtoken.md"},t=l(`<h1 id="gtoken" tabindex="-1">Gtoken <a class="header-anchor" href="#gtoken" aria-hidden="true">#</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h2><p>基于 <code>GoFrame</code>框架的token插件，通过服务端验证方式实现token认证；已完全可以支撑线上token认证，通过Redis支持集群模式；使用简单，大家可以放心使用；</p><p>基于 <code>GoFrame</code>框架的token插件，通过服务端验证方式实现token认证；已完全可以支撑线上token认证，通过Redis支持集群模式；使用简单，大家可以放心使用；</p><ul><li>github地址：<a href="https://github.com/goflyfox/gtoken" target="_blank" rel="noreferrer">https://github.com/goflyfox/gtoken</a></li><li>gitee地址：<a href="https://gitee.com/goflyfox/gtoken" target="_blank" rel="noreferrer">https://gitee.com/goflyfox/gtoken</a></li></ul><p><strong>全面适配GoFrame v2.0.0 ； GoFrame v1.X.X 请使用gtoken v1.4.X相关版本。</strong></p><h3 id="gtoken优势" tabindex="-1">gtoken优势 <a class="header-anchor" href="#gtoken优势" aria-hidden="true">#</a></h3><ol><li>gtoken支撑单点应用使用内存存储，也支持集群使用redis存储；完全适用于企业生产级使用；</li><li>有效的避免了jwt服务端无法退出问题；</li><li>解决jwt无法作废已颁布的令牌，只能等到令牌过期问题；</li><li>通过用户扩展信息存储在服务端，有效规避了jwt携带大量用户扩展信息导致降低传输效率问题；</li><li>有效避免jwt需要客户端实现续签功能，增加客户端复杂度；支持服务端自动续期，客户端不需要关心续签逻辑；</li></ol><h3 id="特性说明" tabindex="-1">特性说明 <a class="header-anchor" href="#特性说明" aria-hidden="true">#</a></h3><ol><li>支持token认证，不强依赖于session和cookie，适用jwt和session认证所有场景；</li><li>支持单机gcache和集群gredis模式；</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 缓存模式 1 gcache 2 gredis</span></span>
<span class="line"><span style="color:#A6ACCD;">CacheMode = 2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">支持服务端缓存自动续期功能</span></span>
<span class="line"><span style="color:#A6ACCD;">// 注：通过MaxRefresh，默认当用户第五天访问时，自动续期</span></span>
<span class="line"><span style="color:#A6ACCD;">// 超时时间 默认10天</span></span>
<span class="line"><span style="color:#A6ACCD;">Timeout int</span></span>
<span class="line"><span style="color:#A6ACCD;">// 缓存刷新时间 默认为超时时间的一半</span></span>
<span class="line"><span style="color:#A6ACCD;">MaxRefresh int</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol><li>支持分组拦截、全局拦截、深度路径拦截，便于根据个人需求定制拦截器；<strong>建议使用分组拦截方式；</strong></li><li>框架使用简单，只需要设置登录验证方法以及登录、登出路径即可；</li><li>在 <code>gtoken v1.4.0</code>版本开始支持分组中间件方式实现，但依然兼容全局和深度中间件实现方式</li></ol><ul><li>github地址：<a href="https://github.com/goflyfox/gtoken" target="_blank" rel="noreferrer">https://github.com/goflyfox/gtoken</a></li><li>gitee地址：<a href="https://gitee.com/goflyfox/gtoken" target="_blank" rel="noreferrer">https://gitee.com/goflyfox/gtoken</a></li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h2><p>安装gtoken</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">github.com/goflyfox/gtoken</span></span>
<span class="line"></span></code></pre></div><h2 id="分组中间件实现" tabindex="-1">分组中间件实现 <a class="header-anchor" href="#分组中间件实现" aria-hidden="true">#</a></h2><p>GoFrame官方推荐使用Group方式实现路由和中间件；</p><h3 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-hidden="true">#</a></h3><p>推荐使用分组方式实现</p><p><strong>Golang</strong></p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 启动gtoken</span></span>
<span class="line"><span style="color:#A6ACCD;">	gfToken </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">gtoken</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GfToken</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		LoginPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		LoginBeforeFunc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  loginFunc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		LogoutPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user/logout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Group</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/admin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">group </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ghttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RouterGroup</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		group</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Middleware</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CORS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		gfToken</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Middleware</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">group</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		group</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ALL</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/system/user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ghttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteJson</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gtoken</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Succ</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">system user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">		………………</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"></span></code></pre></div><p>登录方法实现，通过username返回空或者r.ExitAll()\\r.Exit()处理认证失败；</p><p>特别提示：<strong>这里注册的路径严格按照GF group方式，所以注册的路径是 <code>/admin/login</code>和 <code>/admin/user/logout</code></strong></p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Login</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ghttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	username </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetPostString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	passwd </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetPostString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">passwd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// TODO 进行登录校验</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> username </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> passwd </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteJson</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gtoken</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fail</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">账号或密码错误.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">		r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ExitAll</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>通过 <code>gtoken.GetTokenData(r)</code>获取登录信息</p><h3 id="路径拦截规则" tabindex="-1">路径拦截规则 <a class="header-anchor" href="#路径拦截规则" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    AuthExcludePaths: g.SliceStr{&quot;/user/info&quot;, &quot;/system/user/*&quot;}, // 不拦截路径  /user/info,/system/user/info,/system/user,</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol><li>分组中间件实现，不需要设置 <code>AuthPaths</code>认证路径，设置也没有作用， <strong>需要认证路径为该分组下所有路由</strong> ；</li><li>使用分组拦截的是通过GoFrame的 <code>group.Middleware(authMiddleware)</code>方法，对该分组下的所有路由进行拦截；</li><li>对登录接口路径 <code>loginPath</code>和登出接口路径 <code>logoutPath</code>做拦截认证放行，登出放行是为了避免认证过期无法登出情况；</li><li>严格按照GoFrame分组中间件拦截优先级；如果使用跨域中间件，建议放在跨域中间件之后；</li><li>如果配置 <code>AuthExcludePaths</code>路径，会将配置的不拦截路径排除；</li></ol><h3 id="逻辑测试" tabindex="-1">逻辑测试 <a class="header-anchor" href="#逻辑测试" aria-hidden="true">#</a></h3><p>参考sample项目，先运行main.go，然后可运行api_test.go进行测试并查看结果；验证逻辑说明：</p><ol><li>访问用户信息，提示未携带token</li><li>调用登录后，携带token访问正常</li><li>调用登出提示成功</li><li>携带之前token访问，提示未登录</li></ol><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> RUN   TestAdminSystemUser</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> not login and visit user</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">29</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:-</span><span style="color:#F78C6C;">401</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请求错误或登录超时</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">42</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> execute login and visit user</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">45</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">system user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">51</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.</span><span style="color:#A6ACCD;"> execute logout</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">54</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Logout success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4.</span><span style="color:#A6ACCD;"> visit user</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_admin_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:-</span><span style="color:#F78C6C;">401</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请求错误或登录超时</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="全局中间件实现" tabindex="-1">全局中间件实现 <a class="header-anchor" href="#全局中间件实现" aria-hidden="true">#</a></h2><h3 id="使用说明-1" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明-1" aria-hidden="true">#</a></h3><p>只需要配置登录路径、登出路径、拦截路径以及登录校验实现即可</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 启动gtoken</span></span>
<span class="line"><span style="color:#A6ACCD;">gtoken </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">gtoken</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GfToken</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	LoginPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LoginBeforeFunc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> loginFunc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	LogoutPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user/logout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	AuthPaths</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">        g</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SliceStr</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/system</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 这里是按照前缀拦截，拦截/user /user/list /user/add ...</span></span>
<span class="line"><span style="color:#A6ACCD;">	GlobalMiddleware</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span><span style="color:#A6ACCD;">                           </span><span style="color:#676E95;font-style:italic;">// 开启全局拦截，默认关闭</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">gtoken</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>登录方法实现，通过username返回空或者r.ExitAll()\\r.Exit()处理认证失败；</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Login</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ghttp</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Request</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	username </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetPostString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	passwd </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetPostString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">passwd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// TODO 进行登录校验</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> username </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> passwd </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteJson</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gtoken</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fail</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">账号或密码错误.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">		r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ExitAll</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>通过 <code>gtoken.GetTokenData(r)</code>获取登录信息</p><h3 id="路径拦截规则-1" tabindex="-1">路径拦截规则 <a class="header-anchor" href="#路径拦截规则-1" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">   AuthPaths:        g.SliceStr{&quot;/user&quot;, &quot;/system&quot;},             // 这里是按照前缀拦截，拦截/user /user/list /user/add ...</span></span>
<span class="line"><span style="color:#A6ACCD;">   AuthExcludePaths: g.SliceStr{&quot;/user/info&quot;, &quot;/system/user/*&quot;}, // 不拦截路径  /user/info,/system/user/info,/system/user,</span></span>
<span class="line"><span style="color:#A6ACCD;">   GlobalMiddleware: true,                           // 开启全局拦截，默认关闭</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol><li><code>GlobalMiddleware:true</code>全局拦截的是通过GF的 <code>BindMiddleware</code>方法创建拦截 <code>/*</code></li><li><code>GlobalMiddleware:false</code>路径拦截的是通过GF的 <code>BindMiddleware</code>方法创建拦截 <code>/user*和/system/*</code></li><li>按照中间件优先级路径拦截优先级很高；如果先实现部分中间件在认证前处理需要切换成全局拦截器，严格按照注册顺序即可；</li><li>程序先处理认证路径，如果满足；再排除不拦截路径；</li><li>如果只想用排除路径功能，将拦截路径设置为 <code>/*</code>即可；</li></ol><h3 id="逻辑测试-1" tabindex="-1">逻辑测试 <a class="header-anchor" href="#逻辑测试-1" aria-hidden="true">#</a></h3><p>参考sample1项目，先运行main.go，然后可运行api_test.go进行测试并查看结果；验证逻辑说明：</p><ol><li>访问用户信息，提示未携带token</li><li>调用登录后，携带token访问正常</li><li>调用登出提示成功</li><li>携带之前token访问，提示未登录</li></ol><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> RUN   TestSystemUser</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">43</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> not login and visit user</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:-</span><span style="color:#F78C6C;">401</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请求错误或登录超时</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">63</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> execute login and visit user</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">66</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">system user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">72</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.</span><span style="color:#A6ACCD;"> execute logout</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">75</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Logout success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">81</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4.</span><span style="color:#A6ACCD;"> visit user</span></span>
<span class="line"><span style="color:#A6ACCD;">    api_test</span><span style="color:#89DDFF;">.</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">86</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:-</span><span style="color:#F78C6C;">401</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请求错误或登录超时</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="返回码及配置项" tabindex="-1">返回码及配置项 <a class="header-anchor" href="#返回码及配置项" aria-hidden="true">#</a></h3><ol><li>正常操作成功返回0</li><li>未登录访问需要登录资源返回401</li><li>程序异常返回-99，如编解码错误等</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">SUCCESS      = 0  // 正常</span></span>
<span class="line"><span style="color:#A6ACCD;">FAIL         = -1  // 失败</span></span>
<span class="line"><span style="color:#A6ACCD;">ERROR        = -99  // 异常</span></span>
<span class="line"><span style="color:#A6ACCD;">UNAUTHORIZED = -401  // 未认证</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="配置说明" tabindex="-1">配置说明 <a class="header-anchor" href="#配置说明" aria-hidden="true">#</a></h2><p>具体可参考 <code>GfToken</code>结构体，字段解释如下：</p><table><thead><tr><th>名称</th><th>配置字段</th><th>说明</th><th>分组中间件</th><th>全局中间件</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>名称</td><td>配置字段</td><td>说明</td><td>分组中间件</td><td>全局中间件</td></tr><tr><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td>-</td><td></td><td></td><td></td><td></td></tr><tr><td>服务名</td><td>ServerName</td><td>默认空即可</td><td>支持</td><td>支持</td></tr><tr><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td>缓存模式</td><td>CacheMode</td><td>1 gcache 2 gredis 3 fileCache 默认1</td><td>支持</td><td>支持</td></tr><tr><td>缓存key</td><td>CacheKey</td><td>默认缓存前缀 <code>GToken:</code></td><td>支持</td><td>支持</td></tr><tr><td>超时时间</td><td>Timeout</td><td>默认10天（毫秒）</td><td>支持</td><td>支持</td></tr><tr><td>缓存刷新时间</td><td>MaxRefresh</td><td>默认为超时时间的一半（毫秒）</td><td>支持</td><td>支持</td></tr><tr><td>Token分隔符</td><td>TokenDelimiter</td><td>默认 <code>_</code></td><td>支持</td><td>支持</td></tr><tr><td>Token加密key</td><td>EncryptKey</td><td>默认 <code>12345678912345678912345678912345</code></td><td>支持</td><td>支持</td></tr><tr><td>认证失败提示</td><td>AuthFailMsg</td><td>默认 <code>请求错误或登录超时</code></td><td>支持</td><td>支持</td></tr><tr><td>是否支持多端登录</td><td>MultiLogin</td><td>默认false</td><td>支持</td><td>支持</td></tr><tr><td>中间件类型</td><td>MiddlewareType</td><td>1、Group 2、Bind 3 、Global；\`\`使用分组模式不需要设置</td><td>支持</td><td>支持</td></tr><tr><td>登录路径</td><td>LoginPath</td><td>登录接口路径</td><td>支持</td><td>支持</td></tr><tr><td>登录验证方法</td><td>LoginBeforeFunc</td><td>登录验证需要用户实现方法</td><td>支持</td><td>支持</td></tr><tr><td>登录返回方法</td><td>LoginAfterFunc</td><td>登录完成后调用</td><td>支持</td><td>支持</td></tr><tr><td>登出地址</td><td>LogoutPath</td><td>登出接口路径</td><td>支持</td><td>支持</td></tr><tr><td>登出验证方法</td><td>LogoutBeforeFunc</td><td>登出接口前调用</td><td>支持</td><td>支持</td></tr><tr><td>登出返回方法</td><td>LogoutAfterFunc</td><td>登出接口完成后调用</td><td>支持</td><td>支持</td></tr><tr><td>拦截地址</td><td>AuthPaths</td><td>此路径列表进行认证</td><td>不需要</td><td>支持</td></tr><tr><td>拦截排除地址</td><td>AuthExcludePaths</td><td>此路径列表不进行认证</td><td>支持</td><td>支持</td></tr><tr><td>认证验证方法</td><td>AuthBeforeFunc</td><td>拦截认证前后调用</td><td>支持</td><td>支持</td></tr><tr><td>认证返回方法</td><td>AuthAfterFunc</td><td>拦截认证完成后调用</td><td>支持</td><td>支持</td></tr></tbody></table>`,53),p=[t];function e(c,r,D,F,y,i){return n(),a("div",null,p)}const A=s(o,[["render",e]]);export{C as __pageData,A as default};
