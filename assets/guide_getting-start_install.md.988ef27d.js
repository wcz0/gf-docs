import{_ as s,c as a,o as e,d as l}from"./app.ce21e48a.js";const m=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用gf工具","slug":"使用gf工具","link":"#使用gf工具","children":[]},{"level":2,"title":"Git clone 方式","slug":"git-clone-方式","link":"#git-clone-方式","children":[]},{"level":2,"title":"运行项目","slug":"运行项目","link":"#运行项目","children":[]}],"relativePath":"guide/getting-start/install.md","lastUpdated":1675081585000}'),n={name:"guide/getting-start/install.md"},t=l(`<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h1><h2 id="使用gf工具" tabindex="-1">使用gf工具 <a class="header-anchor" href="#使用gf工具" aria-hidden="true">#</a></h2><p><strong>创建项目模板</strong></p><p>gf工具安装请看 <a href="./gf-tool.html">开发工具</a></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">gf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span></span>
<span class="line"></span></code></pre></div><p>该命令创建一个项目模板，项目名称是demo，其中的-u参数用户指定是否更新项目中使用的goframe框架为最新版本。<br> 框架有独特的项目工程结构，工程目录结构介绍具体请参考：<a href="./structure.html">目录结构</a> 。</p><p><strong>创建多应用模板</strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">gf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span></span>
<span class="line"></span></code></pre></div><p>其中-m 表示使用多项目的模板</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>项目模板中提供了一些make命令，用于更便捷地使用框架工具，特别是make cli及make dao命令在项目开发中比较常用。<a href="http://xn--README-9v7i75bog34bh3nm0hnrcs77rnkbdy3evkexn9dkxxc.MD" target="_blank" rel="noreferrer">具体命令介绍请参考项目中的README.MD</a></p></div><h2 id="git-clone-方式" tabindex="-1">Git clone 方式 <a class="header-anchor" href="#git-clone-方式" aria-hidden="true">#</a></h2><p><strong>下载项目模板</strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/gogf/template-single.git</span></span>
<span class="line"></span></code></pre></div><p>克隆项目模板, 进入项目, 修改项目名称(可选)<br> 获取最新版本gf</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">github.com/gogf/gf/v2@latest</span></span>
<span class="line"></span></code></pre></div><h2 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-hidden="true">#</a></h2><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd demo &amp;&amp; gf run main.go</span></span>
<span class="line"></span></code></pre></div><p>进入到项目里并运行</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>其中的gf run是框架开发工具的动态编译命令，也可以替换为go run命令。</p></div><p>默认情况下项目会设置Web服务端口为8000、开启OpenAPI接口文档、展示Swagger接口文档页面，这些关键信息都会展示到终端。默认情况下，会打印所有的路由信息到终端，该项目模板只会添加一个仅供演示的路由：/hello</p>`,20),p=[t];function o(c,i,r,d,g,h){return e(),a("div",null,p)}const u=s(n,[["render",o]]);export{m as __pageData,u as default};
