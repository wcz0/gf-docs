import{_ as e,c as a,o as r,d as i}from"./app.ce21e48a.js";const l="/gf-docs/assets/lifecycle.b12732a7.png",v=JSON.parse('{"title":"生命周期","description":"","frontmatter":{},"headers":[{"level":2,"title":"请求分层","slug":"请求分层","link":"#请求分层","children":[{"level":3,"title":"cmd","slug":"cmd","link":"#cmd","children":[]},{"level":3,"title":"api","slug":"api","link":"#api","children":[]},{"level":3,"title":"controller","slug":"controller","link":"#controller","children":[]},{"level":3,"title":"model","slug":"model","link":"#model","children":[]},{"level":3,"title":"service","slug":"service","link":"#service","children":[]},{"level":3,"title":"logic","slug":"logic","link":"#logic","children":[]},{"level":3,"title":"dao","slug":"dao","link":"#dao","children":[]}]},{"level":2,"title":"流程图","slug":"流程图","link":"#流程图","children":[]}],"relativePath":"guide/core/lifecycle.md","lastUpdated":1675081585000}'),d={name:"guide/core/lifecycle.md"},c=i('<h1 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-hidden="true">#</a></h1><h2 id="请求分层" tabindex="-1">请求分层 <a class="header-anchor" href="#请求分层" aria-hidden="true">#</a></h2><h3 id="cmd" tabindex="-1">cmd <a class="header-anchor" href="#cmd" aria-hidden="true">#</a></h3><p>cmd层负责引导程序启动，显著的工作是初始化逻辑、注册路由对象、启动server监听、阻塞运行程序直至server退出。</p><h3 id="api" tabindex="-1">api <a class="header-anchor" href="#api" aria-hidden="true">#</a></h3><p>上层server服务接收客户端请求，转换为api中定义的Req接收对象、执行请求参数到Req对象属性的类型转换、执行Req对象中绑定的基础校验并转交Req请求对象给controller层。</p><h3 id="controller" tabindex="-1">controller <a class="header-anchor" href="#controller" aria-hidden="true">#</a></h3><p>controller层负责接收Req请求对象后做一些业务逻辑校验，随后调用一个或多个service实现业务逻辑，将执行结构封装为约定的Res数据结构对象返回。</p><h3 id="model" tabindex="-1">model <a class="header-anchor" href="#model" aria-hidden="true">#</a></h3><p>model层中管理了所有的业务模型，service资源的Input/Output输入输出数据结构都由model层来维护</p><h3 id="service" tabindex="-1">service <a class="header-anchor" href="#service" aria-hidden="true">#</a></h3><p>service是接口层，用于解耦业务模块，service没有具体的业务逻辑实现，具体的业务实现是依靠logic层注入的。</p><h3 id="logic" tabindex="-1">logic <a class="header-anchor" href="#logic" aria-hidden="true">#</a></h3><p>logic层的业务逻辑需要通过调用dao来实现数据的操作，调用dao时需要传递do数据结构对象，用于传递查询条件、输入数据。dao执行完毕后通过Entity数据模型将数据结果返回给service层。</p><h3 id="dao" tabindex="-1">dao <a class="header-anchor" href="#dao" aria-hidden="true">#</a></h3><p>dao层通过框架的ORM抽象层组件与底层真实的数据库交互。</p><h2 id="流程图" tabindex="-1">流程图 <a class="header-anchor" href="#流程图" aria-hidden="true">#</a></h2><p><img src="'+l+'" alt="流程图"></p>',18),t=[c];function o(n,h,s,p,u,_){return r(),a("div",null,t)}const g=e(d,[["render",o]]);export{v as __pageData,g as default};
